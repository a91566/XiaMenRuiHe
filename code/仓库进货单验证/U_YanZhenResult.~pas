unit U_YanZhenResult;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Grids, DBGridEh, RzTabs, ExtCtrls, RzPanel, DB,
  DBClient;

type
  TF_YanZhenResult = class(TForm)
    RzPanel3: TRzPanel;
    Label4: TLabel;
    Button1: TButton;
    ClientDataSet1: TClientDataSet;
    DataSource1: TDataSource;
    Label1: TLabel;
    Panel1: TPanel;
    Timer1: TTimer;
    ClientDataSet14: TClientDataSet;
    ClientDataSet12: TClientDataSet;
    DBGridEh1: TDBGridEh;
    Panel2: TPanel;
    LabeledEdit1: TLabeledEdit;
    Button2: TButton;
    Button3: TButton;
    procedure Timer1Timer(Sender: TObject);
    procedure DBGridEh1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumnEh; State: TGridDrawState);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button3Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Button2Click(Sender: TObject);
  private
    procedure CreateParams(var Params: TCreateParams); override;
    { Private declarations }
  public
    TSList: TStringList;
    { Public declarations }
  end;

var
  F_YanZhenResult: TF_YanZhenResult;

implementation

uses UDM, ZsbFunPro2, ZsbVariable2, ZsbDLL2, U_CangKuJinHuoDanYanZhen;

{$R *.dfm}

procedure TF_YanZhenResult.CreateParams(var Params: TCreateParams);
begin
  inherited;
  Params.WndParent := 0; //重载 显示在任务栏
end;


procedure TF_YanZhenResult.Timer1Timer(Sender: TObject);
var
  temp: string;
  dCount: Double;
begin
  Timer1.Enabled := false;

  temp := 'select MatlCode,MatlQuat,StockQuat,matlver,isselect from MatlInDepotMX where 1=2';
  SelectClientDataSetNoTips(F_YanZhenResult.ClientDataSet1, temp);
  ClientDataSet12.Data := F_CangKuJinHuoDanYanZhen.ClientDataSet2.Data;
  ClientDataSet14.Data := F_CangKuJinHuoDanYanZhen.ClientDataSet4.Data;

  //第一先加载ERP数量，去除重复
  with ClientDataSet12 do
  begin
    First;
    while not eof do
    begin
      if ClientDataSet1.Locate('MatlCode', FieldByName('PRD_NO').AsString, []) then
      begin
        ClientDataSet1.Edit;
        dCount := ClientDataSet1.FieldByName('StockQuat').AsFloat + FieldByName('QTY').AsFloat;
        ClientDataSet1.FieldByName('StockQuat').Value := dCount;
      end
      else
      begin
        ClientDataSet1.Edit;
        ClientDataSet1.Append;
        ClientDataSet1.FieldByName('StockQuat').Value := FieldByName('QTY').AsString;
        ClientDataSet1.FieldByName('MatlCode').Value := FieldByName('PRD_NO').AsString;
      end;
      Next;
    end;
  end;

  //第二加载力真数量
  with ClientDataSet14 do
  begin
    First;
    TSList.Clear;
    while not eof do
    begin
      TSList.Add(FieldByName('MIDDONO').AsString);
      if ClientDataSet1.Locate('MatlCode', FieldByName('MatlCode').AsString, []) then
      begin
        ClientDataSet1.Edit;
        dCount := ClientDataSet1.FieldByName('MatlQuat').AsFloat + FieldByName('MatlQuat').AsFloat;
        ClientDataSet1.FieldByName('MatlQuat').Value := dCount;
      end
      else
      begin
        ClientDataSet1.Edit;
        ClientDataSet1.Append;
        ClientDataSet1.FieldByName('MatlQuat').Value := FieldByName('MatlQuat').AsString;
        ClientDataSet1.FieldByName('MatlCode').Value := FieldByName('MatlCode').AsString;
      end;
      Next;
    end;
  end;

  //第三综合比较
  with ClientDataSet1 do
  begin
    First;
    while not eof do
    begin
      if FieldByName('MatlQuat').AsFloat = FieldByName('StockQuat').AsFloat then
      begin
        ClientDataSet1.Edit;
        ClientDataSet1.FieldByName('isselect').Value := '1';
        ClientDataSet1.FieldByName('MatlVer').Value := '0';
      end
      else
      begin
        ClientDataSet1.Edit;
        ClientDataSet1.FieldByName('isselect').Value := '0';
        if FieldByName('MatlQuat').AsFloat > FieldByName('StockQuat').AsFloat then
        begin
          ClientDataSet1.FieldByName('MatlVer').Value := FieldByName('MatlQuat').AsFloat - FieldByName('StockQuat').AsFloat;
        end
        else
        begin
          ClientDataSet1.FieldByName('MatlVer').Value := FieldByName('StockQuat').AsFloat - FieldByName('MatlQuat').AsFloat;
        end;
      end;
      Next;
    end;
  end;
  DBGridEh1.Repaint;
end;

procedure TF_YanZhenResult.DBGridEh1DrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumnEh;
  State: TGridDrawState);
begin
  if ClientDataSet1.FieldByName('MatlQuat').AsFloat <> ClientDataSet1.FieldByName('StockQuat').AsFloat then
  begin
    DBGridEh1.Canvas.Brush.Color := clYellow;
    DBGridEh1.Canvas.Font.Color := clRed;
    DBGridEh1.Canvas.Font.Style := [fsBold];
    DBGridEh1.DefaultDrawColumnCell(Rect, DataCol, Column, State);
  end
  else
  begin
    DBGridEh1.Canvas.Brush.Color := clWhite;
    DBGridEh1.Canvas.Font.Color := clBlack;
    DBGridEh1.DefaultDrawColumnCell(Rect, DataCol, Column, State);
  end;
end;

procedure TF_YanZhenResult.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  TSList.Free;
  Action := caFree;
end;

procedure TF_YanZhenResult.Button3Click(Sender: TObject);
begin
  Panel2.Visible := False;
end;

procedure TF_YanZhenResult.Button1Click(Sender: TObject);
begin
  Panel2.Visible := True;
end;

procedure TF_YanZhenResult.FormShow(Sender: TObject);
begin
  TSList := TStringList.Create;
end;

procedure TF_YanZhenResult.Button2Click(Sender: TObject);
var
  i: SmallInt;
  exsql, temp: string;
begin
  temp := '(';
  for i := 0 to TSList.Count - 1 do
  begin
    if i = 0 then
    begin
      temp := ' (''' + TSList[i] + '''';
    end
    else
    begin
      temp := temp + ',''' + TSList[i] + '''';
    end;
  end;
  temp := temp + ')';
  ShowMessage(temp);
end;

end.

